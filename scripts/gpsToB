#!/usr/bin/env python

import rospy
import numpy as np
from std_msgs.msg import Float32
from sensor_msgs.msg import NavSatFix


class gpsToB:
    def __init__(self, destLat, destLong):
        rospy.init_node('gpsToB')
        self.course_pub = rospy.Publisher('course', Float32, queue_size=10)
        self.loc_sub = rospy.Subscriber('/gps/fix', NavSatFix, self.callback)
        try:
            rospy.spin()
        except KeyboardInterrupt:
            print('Shutting down')

    def callback(self, data):
        latitude = data.latitude
        longitude = data.longitude

        # Find long/lat diffs
        dLatitude = self.destLat - latitude
        dLongitude = self.destLong - longitude

        # convert long/lat diffs to kilometers
        kiloLatitude = dLatitude * 1852 * 3 / 50
        # approximate amount of km per latitude to be 1855.4 *
        # np.cos(np.radians(latitude))
        kiloLongitude = 1855.4 * \
            np.cos(np.radians(latitude)) * dLongitude * 3 / 50

        # find course
        angle = np.degrees(np.arctan(kiloLongitude / kiloLatitude))

        self.course_pub.publish(angle)


if __name__ == '__main__':
    # heading to the Taj Mahal
    gpsToB(27.175, 78.0421)
